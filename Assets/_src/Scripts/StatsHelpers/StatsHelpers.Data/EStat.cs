// Auto-generated by StatAndIntrinsicEnumGenerator.cs on 6/1/2025 9:36:07 PM
// Based on StatSchemaObject assets found in StatSettings.
// Total items found: 12

using System;

namespace _src.Scripts.StatsHelpers.StatsHelpers.Data
{
    public enum EStat : byte
    {
        None = 0, // From: 0 None, GUID Prefix: f2a5
        ForwardSpeed = 1, // From: 1 Forward Speed, GUID Prefix: 594b
        SwitchSpeed = 2, // From: 2 Switch Speed, GUID Prefix: 4fe3
        Strength = 3, // From: 3 Strength, GUID Prefix: 52f4
        Money = 4, // From: 4 Money, GUID Prefix: 1c49
        MetroCoin = 5, // From: 5 Metro Coin, GUID Prefix: e2b2
        TrainFront = 6, // From: 6 Train Front, GUID Prefix: 2ac3
        Fall = 7, // From: 7 Fall, GUID Prefix: cdaa
        Slide = 8, // From: 8 Slide, GUID Prefix: f1c6
        Jump = 9, // From: 9 Jump, GUID Prefix: 75f9
        Health = 10, // From: 10 Health, GUID Prefix: be91
        MaxHealth = 11, // From: 11 Max Health, GUID Prefix: a448
    }

    public static class EStatExt
    {
        public static string GetGuid(this EStat item)
        {
            return item switch
            {
                EStat.None => "f2a5",
                EStat.ForwardSpeed => "594b",
                EStat.SwitchSpeed => "4fe3",
                EStat.Strength => "52f4",
                EStat.Money => "1c49",
                EStat.MetroCoin => "e2b2",
                EStat.TrainFront => "2ac3",
                EStat.Fall => "cdaa",
                EStat.Slide => "f1c6",
                EStat.Jump => "75f9",
                EStat.Health => "be91",
                EStat.MaxHealth => "a448",
                _ => throw new ArgumentOutOfRangeException(nameof(item), item, "Unknown EStat value for GetGuid.")
            };
        }

        public static string ToName(this EStat item)
        {
            return item switch
            {
                EStat.None => "None",
                EStat.ForwardSpeed => "Forward Speed",
                EStat.SwitchSpeed => "Switch Speed",
                EStat.Strength => "Strength",
                EStat.Money => "Money",
                EStat.MetroCoin => "Metro Coin",
                EStat.TrainFront => "Train Front",
                EStat.Fall => "Fall",
                EStat.Slide => "Slide",
                EStat.Jump => "Jump",
                EStat.Health => "Health",
                EStat.MaxHealth => "Max Health",
                _ => throw new ArgumentOutOfRangeException(nameof(item), item, "Unknown EStat value for ToName.")
            };
        }

        public static EStat FromGuid(string guid4)
        {
            if (guid4 == null || guid4.Length != 4)
            {
                throw new ArgumentException($"GUID must be 4 characters long.", nameof(guid4));
            }

            return guid4 switch
            {
                "f2a5" => EStat.None,
                "594b" => EStat.ForwardSpeed,
                "4fe3" => EStat.SwitchSpeed,
                "52f4" => EStat.Strength,
                "1c49" => EStat.Money,
                "e2b2" => EStat.MetroCoin,
                "2ac3" => EStat.TrainFront,
                "cdaa" => EStat.Fall,
                "f1c6" => EStat.Slide,
                "75f9" => EStat.Jump,
                "be91" => EStat.Health,
                "a448" => EStat.MaxHealth,
                _ => throw new ArgumentOutOfRangeException(nameof(guid4), guid4, "Unknown GUID for EStat.")
            };
        }
    }
}